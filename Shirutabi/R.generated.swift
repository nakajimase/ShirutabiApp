//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import Rswift
import UIKit

/// This `R` struct is generated and contains references to static resources.
struct R: Rswift.Validatable {
  fileprivate static let applicationLocale = hostingBundle.preferredLocalizations.first.flatMap(Locale.init) ?? Locale.current
  fileprivate static let hostingBundle = Bundle(for: R.Class.self)
  
  static func validate() throws {
    try intern.validate()
  }
  
  /// This `R.color` struct is generated, and contains static references to 0 colors.
  struct color {
    fileprivate init() {}
  }
  
  /// This `R.file` struct is generated, and contains static references to 0 files.
  struct file {
    fileprivate init() {}
  }
  
  /// This `R.font` struct is generated, and contains static references to 0 fonts.
  struct font {
    fileprivate init() {}
  }
  
  /// This `R.image` struct is generated, and contains static references to 0 images.
  struct image {
    fileprivate init() {}
  }
  
  /// This `R.nib` struct is generated, and contains static references to 1 nibs.
  struct nib {
    /// Nib `ContentsTopListCell`.
    static let contentsTopListCell = _R.nib._ContentsTopListCell()
    
    /// `UINib(name: "ContentsTopListCell", in: bundle)`
    static func contentsTopListCell(_: Void = ()) -> UIKit.UINib {
      return UIKit.UINib(resource: R.nib.contentsTopListCell)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.reuseIdentifier` struct is generated, and contains static references to 1 reuse identifiers.
  struct reuseIdentifier {
    /// Reuse identifier `contentsTopListCell`.
    static let contentsTopListCell: Rswift.ReuseIdentifier<ContentsTopListCell> = Rswift.ReuseIdentifier(identifier: "contentsTopListCell")
    
    fileprivate init() {}
  }
  
  /// This `R.segue` struct is generated, and contains static references to 0 view controllers.
  struct segue {
    fileprivate init() {}
  }
  
  /// This `R.storyboard` struct is generated, and contains static references to 7 storyboards.
  struct storyboard {
    /// Storyboard `ContentsTopTableViewController`.
    static let contentsTopTableViewController = _R.storyboard.contentsTopTableViewController()
    /// Storyboard `Home`.
    static let home = _R.storyboard.home()
    /// Storyboard `LaunchScreen`.
    static let launchScreen = _R.storyboard.launchScreen()
    /// Storyboard `MainNavigation`.
    static let mainNavigation = _R.storyboard.mainNavigation()
    /// Storyboard `MainTabBar`.
    static let mainTabBar = _R.storyboard.mainTabBar()
    /// Storyboard `MyPageViewController`.
    static let myPageViewController = _R.storyboard.myPageViewController()
    /// Storyboard `SearchViewController`.
    static let searchViewController = _R.storyboard.searchViewController()
    
    /// `UIStoryboard(name: "ContentsTopTableViewController", bundle: ...)`
    static func contentsTopTableViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.contentsTopTableViewController)
    }
    
    /// `UIStoryboard(name: "Home", bundle: ...)`
    static func home(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.home)
    }
    
    /// `UIStoryboard(name: "LaunchScreen", bundle: ...)`
    static func launchScreen(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.launchScreen)
    }
    
    /// `UIStoryboard(name: "MainNavigation", bundle: ...)`
    static func mainNavigation(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.mainNavigation)
    }
    
    /// `UIStoryboard(name: "MainTabBar", bundle: ...)`
    static func mainTabBar(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.mainTabBar)
    }
    
    /// `UIStoryboard(name: "MyPageViewController", bundle: ...)`
    static func myPageViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.myPageViewController)
    }
    
    /// `UIStoryboard(name: "SearchViewController", bundle: ...)`
    static func searchViewController(_: Void = ()) -> UIKit.UIStoryboard {
      return UIKit.UIStoryboard(resource: R.storyboard.searchViewController)
    }
    
    fileprivate init() {}
  }
  
  /// This `R.string` struct is generated, and contains static references to 0 localization tables.
  struct string {
    fileprivate init() {}
  }
  
  fileprivate struct intern: Rswift.Validatable {
    fileprivate static func validate() throws {
      // There are no resources to validate
    }
    
    fileprivate init() {}
  }
  
  fileprivate class Class {}
  
  fileprivate init() {}
}

struct _R {
  struct nib {
    struct _ContentsTopListCell: Rswift.NibResourceType, Rswift.ReuseIdentifierType {
      typealias ReusableType = ContentsTopListCell
      
      let bundle = R.hostingBundle
      let identifier = "contentsTopListCell"
      let name = "ContentsTopListCell"
      
      func firstView(owner ownerOrNil: AnyObject?, options optionsOrNil: [NSObject : AnyObject]? = nil) -> ContentsTopListCell? {
        return instantiate(withOwner: ownerOrNil, options: optionsOrNil)[0] as? ContentsTopListCell
      }
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  struct storyboard {
    struct contentsTopTableViewController: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = ContentsTopTableViewController
      
      let bundle = R.hostingBundle
      let name = "ContentsTopTableViewController"
      
      fileprivate init() {}
    }
    
    struct home: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = HomeViewController
      
      let bundle = R.hostingBundle
      let name = "Home"
      
      fileprivate init() {}
    }
    
    struct launchScreen: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = UIKit.UIViewController
      
      let bundle = R.hostingBundle
      let name = "LaunchScreen"
      
      fileprivate init() {}
    }
    
    struct mainNavigation: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = MainNavigationController
      
      let bundle = R.hostingBundle
      let name = "MainNavigation"
      
      fileprivate init() {}
    }
    
    struct mainTabBar: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = MainTabController
      
      let bundle = R.hostingBundle
      let name = "MainTabBar"
      
      fileprivate init() {}
    }
    
    struct myPageViewController: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = MyPageViewController
      
      let bundle = R.hostingBundle
      let name = "MyPageViewController"
      
      fileprivate init() {}
    }
    
    struct searchViewController: Rswift.StoryboardResourceWithInitialControllerType {
      typealias InitialController = SearchViewController
      
      let bundle = R.hostingBundle
      let name = "SearchViewController"
      
      fileprivate init() {}
    }
    
    fileprivate init() {}
  }
  
  fileprivate init() {}
}
